{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","setNo","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","app","e","setState","searchField","target","value","state","headers","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAEaA,G,YAAO,SAACC,GACjB,OACQ,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAM,UAAUC,IAAG,+BAA4BH,EAAMI,QAAQC,GAA1C,mBAAuDL,EAAMM,MAA7D,mBACxB,6BAAKN,EAAMI,QAAQG,OACnB,4BAAIP,EAAMI,QAAQI,aCHrBC,G,MAAW,SAACT,GACrB,OACQ,qBAAKC,UAAY,YAAjB,SACMD,EAAMU,SAASC,KAAK,SAAAP,GAAO,OAAK,cAAC,EAAD,CAAME,MAASN,EAAMM,MAAwBF,QAASA,EAAtD,cAAiCA,EAAQC,WCC9EO,G,MAAY,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,aACpC,OACI,uBACIb,UAAY,SACZc,KAAK,SACLF,YAAcA,EACdG,SAAaF,MC6CVG,E,kDArDb,aAAc,IAAD,8BACX,gBAeFH,aAAe,SAAAI,GACb,EAAKC,SAAU,CAACC,YAAaF,EAAEG,OAAOC,SAftC,EAAKC,MAAQ,CACXC,QAAS,kBACTd,SAAS,GACTU,YAAa,GACbf,GAAI,GANK,E,gEAUO,IAAD,OACjBoB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACT,SAAUmB,S,+BASjC,IAAD,SAEuCC,KAAKP,MAA3CC,EAFD,EAECA,QAASd,EAFV,EAEUA,SAAUU,EAFpB,EAEoBA,YAAaf,EAFjC,EAEiCA,GACjC0B,EAAmBrB,EAASsB,QAAQ,SAAA5B,GAAO,OAAIA,EAAQG,KAAK0B,cAAcC,SAASd,EAAYa,kBAC/F3B,EAAQD,EAEd,OACE,sBAAKJ,UAAU,MAAf,UACE,6BAAKuB,IAEL,cAAC,EAAD,CACEX,YAAc,kBACdC,aAAegB,KAAKhB,eAGpB,gCACE,wBAAQqB,QAAU,WAAO,EAAKhB,SAAS,CAACd,GAAK,EAAGmB,QAAQ,cAAxD,oBACA,wBAAQW,QAAU,WAAO,EAAKhB,SAAS,CAACd,GAAK,EAAGmB,QAAQ,qBAAxD,sBACA,wBAAQW,QAAU,WAAO,EAAKhB,SAAS,CAACd,GAAK,EAAGmB,QAAQ,kBAAxD,uBACA,wBAAQW,QAAU,WAAO,EAAKhB,SAAS,CAACd,GAAK,EAAGmB,QAAQ,iBAAxD,qBAGF,uBAEF,cAAC,EAAD,CAAUd,SAAYqB,EAAkBzB,MAASA,W,GA/CvC8B,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c1a4a01a.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css'\nexport const Card = (props) => { /* props contains object from calling jsx (CardList in app.js) */\n    return (\n            <div className=\"card-container\">\n                <img alt = \"monster\" src = {`https://robohash.org/${props.monster.id}?set=set${props.setNo}&size=180x180`} />\n                <h2>{props.monster.name}</h2>\n                <p>{props.monster.email}</p>\n            </div>\n        \n    );\n}","import React from 'react';\nimport {Card} from '../card/card.component.jsx'\nimport './card-list.styles.css'\n\nexport const CardList = (props) => { /* props contains object from calling jsx (CardList in app.js) */\n    return (\n            <div className = 'card-list'>\n                { props.monsters.map( monster =>  <Card setNo = {props.setNo} key={monster.id} monster={monster}> </Card>) }\n            </div>\n        \n    );\n}","import React from 'react';\nimport './search-box.styles.css';\n\n//Read Below Lines about Functional Component\n//Functional component dont have any access to this.state because they dont call constructor of Component\n// Dont have any access to Life-cycle methods\n// Functional component take some props and return HTML(JSX)\n\nexport const SearchBox = ({placeholder, handleChange}) =>{\n    return (\n        <input\n            className = 'search' \n            type=\"search\" \n            placeholder={ placeholder }\n            onChange = { handleChange } \n        />\n    );\n};\n\n","import './App.css';\nimport React, { Component } from 'react';\nimport {CardList} from './components/card-list/card-list.component'\nimport {SearchBox} from './components/search-box/search-box.component';\n\nclass app extends Component{\n  constructor(){\n    super();\n    this.state = {\n      headers: 'Monster Rolodex',\n      monsters:[],\n      searchField: \"\",\n      id: 2\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}))\n  }\n\n  handleChange = e => {\n    this.setState( {searchField: e.target.value} )\n  }\n\n\n  \n  render(){\n    /* props will be any parameter that is passed in CardList */\n    const {headers, monsters, searchField, id} = this.state;\n    const filteredMonsters = monsters.filter( monster => monster.name.toLowerCase().includes(searchField.toLowerCase()) );\n    const setNo = id;\n\n    return (\n      <div className=\"App\">\n        <h1>{headers}</h1>\n\n        <SearchBox \n          placeholder = 'search-monsters' \n          handleChange={ this.handleChange }\n        />\n          \n          <div>        \n            <button onClick ={() => {this.setState({id : 1, headers:\"Roboters\"})}}>Robots</button>\n            <button onClick ={() => {this.setState({id : 2, headers:\"Monster Rolodex\"})}}>Monsters</button>\n            <button onClick ={() => {this.setState({id : 3, headers:\"Robo Headers\"})}}>RoboHeads</button>\n            <button onClick ={() => {this.setState({id : 4, headers:\"Sweet Kitty\"})}}>Cats</button>\n          </div>\n\n          <br/>\n        \n        <CardList monsters = {filteredMonsters} setNo = {setNo}></CardList>\n      \n      </div>\n    );\n  }\n}\n\nexport default app;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}